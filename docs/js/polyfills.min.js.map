{"version":3,"sources":["node_modules/promise-polyfill/dist/polyfill.js","src/polyfills/polyfills.js"],"names":["global","factory","exports","module","define","amd","this","finallyConstructor","callback","constructor","then","value","resolve","reason","reject","setTimeoutFunc","setTimeout","noop","Promise","fn","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","self","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","e","promise","push","newValue","finale","thisArg","apply","arguments","length","_unhandledRejectionFn","i","len","Handler","done","ex","prototype","prom","all","arr","args","Array","slice","call","remaining","res","val","race","values","setImmediate","err","console","warn","globalNS","window","Error","Object","assign","defineProperty","enumerable","configurable","writable","target","firstSource","to","nextSource","keysArray","keys","nextIndex","nextKey","desc","getOwnPropertyDescriptor","find","predicate","list","fill","O","relativeStart","k","Math","max","min","end","relativeEnd","final"],"mappings":"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","file":"docs/js/polyfills.min.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(factory());\n}(this, (function () { 'use strict';\n\n/**\n * @this {Promise}\n */\nfunction finallyConstructor(callback) {\n  var constructor = this.constructor;\n  return this.then(\n    function(value) {\n      return constructor.resolve(callback()).then(function() {\n        return value;\n      });\n    },\n    function(reason) {\n      return constructor.resolve(callback()).then(function() {\n        return constructor.reject(reason);\n      });\n    }\n  );\n}\n\n// Store setTimeout reference so promise-polyfill will be unaffected by\n// other code modifying setTimeout (like sinon.useFakeTimers())\nvar setTimeoutFunc = setTimeout;\n\nfunction noop() {}\n\n// Polyfill for Function.prototype.bind\nfunction bind(fn, thisArg) {\n  return function() {\n    fn.apply(thisArg, arguments);\n  };\n}\n\n/**\n * @constructor\n * @param {Function} fn\n */\nfunction Promise(fn) {\n  if (!(this instanceof Promise))\n    throw new TypeError('Promises must be constructed via new');\n  if (typeof fn !== 'function') throw new TypeError('not a function');\n  /** @type {!number} */\n  this._state = 0;\n  /** @type {!boolean} */\n  this._handled = false;\n  /** @type {Promise|undefined} */\n  this._value = undefined;\n  /** @type {!Array<!Function>} */\n  this._deferreds = [];\n\n  doResolve(fn, this);\n}\n\nfunction handle(self, deferred) {\n  while (self._state === 3) {\n    self = self._value;\n  }\n  if (self._state === 0) {\n    self._deferreds.push(deferred);\n    return;\n  }\n  self._handled = true;\n  Promise._immediateFn(function() {\n    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n      return;\n    }\n    var ret;\n    try {\n      ret = cb(self._value);\n    } catch (e) {\n      reject(deferred.promise, e);\n      return;\n    }\n    resolve(deferred.promise, ret);\n  });\n}\n\nfunction resolve(self, newValue) {\n  try {\n    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n    if (newValue === self)\n      throw new TypeError('A promise cannot be resolved with itself.');\n    if (\n      newValue &&\n      (typeof newValue === 'object' || typeof newValue === 'function')\n    ) {\n      var then = newValue.then;\n      if (newValue instanceof Promise) {\n        self._state = 3;\n        self._value = newValue;\n        finale(self);\n        return;\n      } else if (typeof then === 'function') {\n        doResolve(bind(then, newValue), self);\n        return;\n      }\n    }\n    self._state = 1;\n    self._value = newValue;\n    finale(self);\n  } catch (e) {\n    reject(self, e);\n  }\n}\n\nfunction reject(self, newValue) {\n  self._state = 2;\n  self._value = newValue;\n  finale(self);\n}\n\nfunction finale(self) {\n  if (self._state === 2 && self._deferreds.length === 0) {\n    Promise._immediateFn(function() {\n      if (!self._handled) {\n        Promise._unhandledRejectionFn(self._value);\n      }\n    });\n  }\n\n  for (var i = 0, len = self._deferreds.length; i < len; i++) {\n    handle(self, self._deferreds[i]);\n  }\n  self._deferreds = null;\n}\n\n/**\n * @constructor\n */\nfunction Handler(onFulfilled, onRejected, promise) {\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, self) {\n  var done = false;\n  try {\n    fn(\n      function(value) {\n        if (done) return;\n        done = true;\n        resolve(self, value);\n      },\n      function(reason) {\n        if (done) return;\n        done = true;\n        reject(self, reason);\n      }\n    );\n  } catch (ex) {\n    if (done) return;\n    done = true;\n    reject(self, ex);\n  }\n}\n\nPromise.prototype['catch'] = function(onRejected) {\n  return this.then(null, onRejected);\n};\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  // @ts-ignore\n  var prom = new this.constructor(noop);\n\n  handle(this, new Handler(onFulfilled, onRejected, prom));\n  return prom;\n};\n\nPromise.prototype['finally'] = finallyConstructor;\n\nPromise.all = function(arr) {\n  return new Promise(function(resolve, reject) {\n    if (!arr || typeof arr.length === 'undefined')\n      throw new TypeError('Promise.all accepts an array');\n    var args = Array.prototype.slice.call(arr);\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n\n    function res(i, val) {\n      try {\n        if (val && (typeof val === 'object' || typeof val === 'function')) {\n          var then = val.then;\n          if (typeof then === 'function') {\n            then.call(\n              val,\n              function(val) {\n                res(i, val);\n              },\n              reject\n            );\n            return;\n          }\n        }\n        args[i] = val;\n        if (--remaining === 0) {\n          resolve(args);\n        }\n      } catch (ex) {\n        reject(ex);\n      }\n    }\n\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.resolve = function(value) {\n  if (value && typeof value === 'object' && value.constructor === Promise) {\n    return value;\n  }\n\n  return new Promise(function(resolve) {\n    resolve(value);\n  });\n};\n\nPromise.reject = function(value) {\n  return new Promise(function(resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function(values) {\n  return new Promise(function(resolve, reject) {\n    for (var i = 0, len = values.length; i < len; i++) {\n      values[i].then(resolve, reject);\n    }\n  });\n};\n\n// Use polyfill for setImmediate for performance gains\nPromise._immediateFn =\n  (typeof setImmediate === 'function' &&\n    function(fn) {\n      setImmediate(fn);\n    }) ||\n  function(fn) {\n    setTimeoutFunc(fn, 0);\n  };\n\nPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n  if (typeof console !== 'undefined' && console) {\n    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n  }\n};\n\n/** @suppress {undefinedVars} */\nvar globalNS = (function() {\n  // the only reliable means to get the global object is\n  // `Function('return this')()`\n  // However, this causes CSP violations in Chrome apps.\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n  throw new Error('unable to locate global object');\n})();\n\nif (!('Promise' in globalNS)) {\n  globalNS['Promise'] = Promise;\n} else if (!globalNS.Promise.prototype['finally']) {\n  globalNS.Promise.prototype['finally'] = finallyConstructor;\n}\n\n})));\n","// Polyfills for IE11\n\n/*\nif (typeof Object.assign != 'function') {\n\t// Must be writable: true, enumerable: false, configurable: true\n\tObject.defineProperty(Object, \"assign\", {\n\t\tvalue: function assign(target, varArgs) { // .length of function is 2\n\t\t\t'use strict';\n\t\t\tif (target == null) { // TypeError if undefined or null\n\t\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t\t}\n\t\t\tvar to = Object(target);\n\t\t\tfor (var index = 1; index < arguments.length; index++) {\n\t\t\t\tvar nextSource = arguments[index];\n\t\t\t\tif (nextSource != null) { // Skip over if undefined or null\n\t\t\t\t\tfor (var nextKey in nextSource) {\n\t\t\t\t\t\t// Avoid bugs when hasOwnProperty is shadowed\n\t\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n\t\t\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn to;\n\t\t},\n\t\twritable: true,\n\t\tconfigurable: true\n\t});\n}\n*/\n\nif (!Object.assign) {\n\tObject.defineProperty(Object, 'assign', {\n\t\tenumerable: false,\n\t\tconfigurable: true,\n\t\twritable: true,\n\t\tvalue: function(target, firstSource) {\n\t\t\t'use strict';\n\t\t\tif (target === undefined || target === null) {\n\t\t\t\tthrow new TypeError('Cannot convert first argument to object');\n\t\t\t}\n\t\t\tvar to = Object(target);\n\t\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\t\tvar nextSource = arguments[i];\n\t\t\t\tif (nextSource === undefined || nextSource === null) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tnextSource = Object(nextSource);\n\t\t\t\tvar keysArray = Object.keys(Object(nextSource));\n\t\t\t\tfor (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n\t\t\t\t\tvar nextKey = keysArray[nextIndex];\n\t\t\t\t\tvar desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\t\t\t\t\tif (desc !== undefined && desc.enumerable) {\n\t\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn to;\n\t\t}\n\t});\n}\n\nif (!Array.prototype.find) {\n\tObject.defineProperty(Array.prototype, 'find', {\n\t\tvalue: function(predicate) {\n\t\t\t'use strict';\n\t\t\tif (this == null) {\n\t\t\t\tthrow new TypeError('Array.prototype.find called on null or undefined');\n\t\t\t}\n\t\t\tif (typeof predicate !== 'function') {\n\t\t\t\tthrow new TypeError('predicate must be a function');\n\t\t\t}\n\t\t\tvar list = Object(this);\n\t\t\tvar length = list.length >>> 0;\n\t\t\tvar thisArg = arguments[1];\n\t\t\tfor (var i = 0; i !== length; i++) {\n\t\t\t\tif (predicate.call(thisArg, this[i], i, list)) {\n\t\t\t\t\treturn this[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t}\n\t});\n}\n\nif (!Array.prototype.fill) {\n\tObject.defineProperty(Array.prototype, 'fill', {\n\t\tvalue: function(value) {\n\t\t\t// Steps 1-2.\n\t\t\tif (this == null) {\n\t\t\t\tthrow new TypeError('this is null or not defined');\n\t\t\t}\n\t\t\tvar O = Object(this);\n\t\t\t// Steps 3-5.\n\t\t\tvar len = O.length >>> 0;\n\t\t\t// Steps 6-7.\n\t\t\tvar start = arguments[1];\n\t\t\tvar relativeStart = start >> 0;\n\t\t\t// Step 8.\n\t\t\tvar k = relativeStart < 0 ?\n\t\t\t\tMath.max(len + relativeStart, 0) :\n\t\t\t\tMath.min(relativeStart, len);\n\t\t\t// Steps 9-10.\n\t\t\tvar end = arguments[2];\n\t\t\tvar relativeEnd = end === undefined ?\n\t\t\t\tlen : end >> 0;\n\t\t\t// Step 11.\n\t\t\tvar final = relativeEnd < 0 ?\n\t\t\t\tMath.max(len + relativeEnd, 0) :\n\t\t\t\tMath.min(relativeEnd, len);\n\t\t\t// Step 12.\n\t\t\twhile (k < final) {\n\t\t\t\tO[k] = value;\n\t\t\t\tk++;\n\t\t\t}\n\t\t\t// Step 13.\n\t\t\treturn O;\n\t\t}\n\t});\n}\n\n/*\nif (!window.Symbol) {\n\tvar idCounter = 0;\n\tSymbol = function Symbol(key) {\n\t\treturn '__' + key + '_' + Math.floor(Math.random() * 1e9) + '_' + (++idCounter) + '__';\n\t};\n\tSymbol.iterator = Symbol('Symbol.iterator');\n\twindow.Symbol = Symbol;\n}\n*/\n\n/*\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\nif (!Array.from) {\n\tArray.from = (function () {\n\t  var toStr = Object.prototype.toString;\n\t  var isCallable = function (fn) {\n\t\treturn typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n\t  };\n\t  var toInteger = function (value) {\n\t\tvar number = Number(value);\n\t\tif (isNaN(number)) { return 0; }\n\t\tif (number === 0 || !isFinite(number)) { return number; }\n\t\treturn (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n\t  };\n\t  var maxSafeInteger = Math.pow(2, 53) - 1;\n\t  var toLength = function (value) {\n\t\tvar len = toInteger(value);\n\t\treturn Math.min(Math.max(len, 0), maxSafeInteger);\n\t  };\n\t  // The length property of the from method is 1.\n\t  return function from(arrayLike) { // (arrayLike, mapFn, thisArg)\n\t\t// 1. Let C be the this value.\n\t\tvar C = this;\n\t\t// 2. Let items be ToObject(arrayLike).\n\t\tvar items = Object(arrayLike);\n\t\t// 3. ReturnIfAbrupt(items).\n\t\tif (arrayLike == null) {\n\t\t  throw new TypeError('Array.from requires an array-like object - not null or undefined');\n\t\t}\n\t\t// 4. If mapfn is undefined, then let mapping be false.\n\t\tvar mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n\t\tvar T;\n\t\tif (typeof mapFn !== 'undefined') {\n\t\t  // 5. else\n\t\t  // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n\t\t  if (!isCallable(mapFn)) {\n\t\t\tthrow new TypeError('Array.from: when provided, the second argument must be a function');\n\t\t  }\n\t\t  // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\t\t  if (arguments.length > 2) {\n\t\t\tT = arguments[2];\n\t\t  }\n\t\t}\n\t\t// 10. Let lenValue be Get(items, \"length\").\n\t\t// 11. Let len be ToLength(lenValue).\n\t\tvar len = toLength(items.length);\n\t\t// 13. If IsConstructor(C) is true, then\n\t\t// 13. a. Let A be the result of calling the [[Construct]] internal method\n\t\t// of C with an argument list containing the single item len.\n\t\t// 14. a. Else, Let A be ArrayCreate(len).\n\t\tvar A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\t\t// 16. Let k be 0.\n\t\tvar k = 0;\n\t\t// 17. Repeat, while k < len… (also steps a - h)\n\t\tvar kValue;\n\t\twhile (k < len) {\n\t\t  kValue = items[k];\n\t\t  if (mapFn) {\n\t\t\tA[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n\t\t  } else {\n\t\t\tA[k] = kValue;\n\t\t  }\n\t\t  k += 1;\n\t\t}\n\t\t// 18. Let putStatus be Put(A, \"length\", len, true).\n\t\tA.length = len;\n\t\t// 20. Return A.\n\t\treturn A;\n\t  };\n\t}());\n  }\n  */\n"]}